class BSTIterator:

    def __init__(self, root: Optional[TreeNode]):
    
        self.stack = []
        while root:
            self.stack.append(root)
            root = root.left
        
    def next(self) -> int:
    
        temp = self.stack.pop()
        x = temp.right
        while x:
            self.stack.append(x)
            x = x.left
        return temp.val
        

    def hasNext(self) -> bool:
    
        return len(self.stack) > 0
