import sys
class Solution:
  
    def recoverTree(self, root: Optional[TreeNode]) -> None:
        
        
        def inorder(root):
            nonlocal first, last, mid, prev
            if not root: return 
            inorder(root.left)
            
            if prev != None and prev.val > root.val:  
                if first == None:
                    first = prev
                    mid = root
                else:
                    last = root 
            prev = root
            
            inorder(root.right)
        
        
        
        first = mid = last = None
        prev = TreeNode(-sys.maxsize)
        inorder(root)
        if first and last:
            first.val, last.val = last.val, first.val
        elif first and mid:
            first.val, mid.val = mid.val, first.val
