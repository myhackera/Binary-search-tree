class Solution:
    def numTrees(self, n: int) -> int:
        
        # Go to copy for clear discussion
        
#         if n <= 1: return 1
#         ans = 0
#         for i in range(1, n+1):
#             ans += self.numTrees(i-1)*self.numTrees(n-i)
        
#         return ans

#         def solve(n, dp):
        
#             if n <= 1: return 1
#             if dp[n] != -1: return dp[n]
#             ans = 0
#             for i in range(1, n+1):
#                 ans += self.numTrees(i-1)*self.numTrees(n-i)

#             dp[n] = ans
#             return dp[n]
        
#         dp = [-1]*(n+1)
#         return solve(n, dp)

        dp = [0]*(n+1)
        dp[0] = dp[1] = 1
        
        for i in range(2, n+1):
            for j in range(1, i+1):
                dp[i] += dp[j-1]*dp[i-j]
                
        return dp[n]
